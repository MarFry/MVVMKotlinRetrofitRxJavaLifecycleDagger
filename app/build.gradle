apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.myfirstappnrollapp"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            buildConfigField 'String', 'URL', '"https://restcountries.eu/rest/v2/"'
            buildConfigField 'String', 'DatabaseName', '"countries_db"'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            buildConfigField 'String', 'URL', '"https://restcountries.eu/rest/v2/"'
            buildConfigField 'String', 'DATABASE_NAME', '"countries_db"'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha02'
    implementation 'androidx.core:core-ktx:1.1.0-alpha04'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.recyclerview:recyclerview:$recycler_view_version"
    implementation "androidx.cardview:cardview:$card_view_version"

//    Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"

//    Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

//    OkHttp
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"

//    Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    implementation "com.squareup.retrofit2:converter-moshi:$moshi_converter_version"

//    Rx
    implementation "io.reactivex.rxjava2:rxandroid:$rx_android_version"
    implementation "io.reactivex.rxjava2:rxkotlin:$rx_kotlin_version"

//    LifeCycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_compiler"

//     Room
    kapt "android.arch.persistence.room:compiler:$room_version"
    implementation "android.arch.persistence.room:runtime:$room_runtime_version"
    implementation "android.arch.persistence.room:rxjava2:$room_version"

//    LeakCanary
    implementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"

//    Mockito
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito:mockito-inline:$mockito_inline_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    testImplementation "android.arch.core:core-testing:1.1.1"
}
